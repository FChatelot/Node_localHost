https://www.loginradius.com/blog/engineering/guest-post/nodejs-authentication-guide/

Dans le cadre de mes expérimentations j'ai conçu 2 serveurs différents utilisant
mongoDB.
L'approche actuelle est de concevoir une application fullstackée entièrement en 
javascript. 

Le premier est le node_testServeur qui se base uniquement sur node sans framework.
Il est en v0.0.1.

Le second se base sur express.js. 
{npm i express}
Express va me servir de squelette pour mon application. à partir du server qu'il 
nous permet de concevoir, je vais établir les différentes routes de notre app.

Afin de render mon serveur j'ai utilisé le template ejs qui nous offre une vue
front de notre serveur. 
{npm i ejs}

J'utilise nodemon pour maintenir un server qui se relance automatiquement.
{npm i nodemon}


Connecter un fichier css requiert de définir un dossier statique via l'app.
La prochaine étape est d'ajouter une interface de connection/deconnection et 
gestion de profil 

==============================================================================================================================================================================
PROCHAINES IMPLANTATIONS ET IDEES:

Pour notre partie authentication, j'ai du mettre en place une base de donnée utilisant mongoDB (à venir).
utilisation de passport afin d'avoir une session valide qui permet de garder les informations de connection et gérer jetons et validations.

A venir encore: implanter correctement la partie user (voir figma), connecter la base de donnée à l'app du projet express_test. Crypter les mdp. Tester le système d'enregistrement/ connetion de notre site ainsi que la déconnection. 
Autre élément à implanter: un formulaire permettant de changer ses identifiants, compléter son profil et le supprimer. 
Autre élément à implanter: l'authentication via google/facebook.

Faire le Css/partie front end.

Sécuriser nos formulaires en ajoutant un captcha ?


searchspace
https://www.pierre-giraud.com/html-css-apprendre-coder-cours/creation-menu-deroulant/


